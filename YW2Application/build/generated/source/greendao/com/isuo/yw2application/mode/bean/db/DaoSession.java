package com.isuo.yw2application.mode.bean.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.isuo.yw2application.mode.bean.db.CreateEquipmentDb;
import com.isuo.yw2application.mode.bean.db.CreateRoomDb;
import com.isuo.yw2application.mode.bean.db.EquipmentDataDb;
import com.isuo.yw2application.mode.bean.db.EquipmentDb;
import com.isuo.yw2application.mode.bean.db.Image;
import com.isuo.yw2application.mode.bean.db.RoomDb;
import com.isuo.yw2application.mode.bean.db.ShareDataDb;
import com.isuo.yw2application.mode.bean.db.TaskDb;
import com.isuo.yw2application.mode.bean.db.UserInfo;
import com.isuo.yw2application.mode.bean.db.Voice;
import com.isuo.yw2application.mode.bean.news.NewsBean;
import com.isuo.yw2application.mode.bean.news.ReadNewsBean;

import com.isuo.yw2application.mode.bean.db.CreateEquipmentDbDao;
import com.isuo.yw2application.mode.bean.db.CreateRoomDbDao;
import com.isuo.yw2application.mode.bean.db.EquipmentDataDbDao;
import com.isuo.yw2application.mode.bean.db.EquipmentDbDao;
import com.isuo.yw2application.mode.bean.db.ImageDao;
import com.isuo.yw2application.mode.bean.db.RoomDbDao;
import com.isuo.yw2application.mode.bean.db.ShareDataDbDao;
import com.isuo.yw2application.mode.bean.db.TaskDbDao;
import com.isuo.yw2application.mode.bean.db.UserInfoDao;
import com.isuo.yw2application.mode.bean.db.VoiceDao;
import com.isuo.yw2application.mode.bean.news.NewsBeanDao;
import com.isuo.yw2application.mode.bean.news.ReadNewsBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig createEquipmentDbDaoConfig;
    private final DaoConfig createRoomDbDaoConfig;
    private final DaoConfig equipmentDataDbDaoConfig;
    private final DaoConfig equipmentDbDaoConfig;
    private final DaoConfig imageDaoConfig;
    private final DaoConfig roomDbDaoConfig;
    private final DaoConfig shareDataDbDaoConfig;
    private final DaoConfig taskDbDaoConfig;
    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig voiceDaoConfig;
    private final DaoConfig newsBeanDaoConfig;
    private final DaoConfig readNewsBeanDaoConfig;

    private final CreateEquipmentDbDao createEquipmentDbDao;
    private final CreateRoomDbDao createRoomDbDao;
    private final EquipmentDataDbDao equipmentDataDbDao;
    private final EquipmentDbDao equipmentDbDao;
    private final ImageDao imageDao;
    private final RoomDbDao roomDbDao;
    private final ShareDataDbDao shareDataDbDao;
    private final TaskDbDao taskDbDao;
    private final UserInfoDao userInfoDao;
    private final VoiceDao voiceDao;
    private final NewsBeanDao newsBeanDao;
    private final ReadNewsBeanDao readNewsBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        createEquipmentDbDaoConfig = daoConfigMap.get(CreateEquipmentDbDao.class).clone();
        createEquipmentDbDaoConfig.initIdentityScope(type);

        createRoomDbDaoConfig = daoConfigMap.get(CreateRoomDbDao.class).clone();
        createRoomDbDaoConfig.initIdentityScope(type);

        equipmentDataDbDaoConfig = daoConfigMap.get(EquipmentDataDbDao.class).clone();
        equipmentDataDbDaoConfig.initIdentityScope(type);

        equipmentDbDaoConfig = daoConfigMap.get(EquipmentDbDao.class).clone();
        equipmentDbDaoConfig.initIdentityScope(type);

        imageDaoConfig = daoConfigMap.get(ImageDao.class).clone();
        imageDaoConfig.initIdentityScope(type);

        roomDbDaoConfig = daoConfigMap.get(RoomDbDao.class).clone();
        roomDbDaoConfig.initIdentityScope(type);

        shareDataDbDaoConfig = daoConfigMap.get(ShareDataDbDao.class).clone();
        shareDataDbDaoConfig.initIdentityScope(type);

        taskDbDaoConfig = daoConfigMap.get(TaskDbDao.class).clone();
        taskDbDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        voiceDaoConfig = daoConfigMap.get(VoiceDao.class).clone();
        voiceDaoConfig.initIdentityScope(type);

        newsBeanDaoConfig = daoConfigMap.get(NewsBeanDao.class).clone();
        newsBeanDaoConfig.initIdentityScope(type);

        readNewsBeanDaoConfig = daoConfigMap.get(ReadNewsBeanDao.class).clone();
        readNewsBeanDaoConfig.initIdentityScope(type);

        createEquipmentDbDao = new CreateEquipmentDbDao(createEquipmentDbDaoConfig, this);
        createRoomDbDao = new CreateRoomDbDao(createRoomDbDaoConfig, this);
        equipmentDataDbDao = new EquipmentDataDbDao(equipmentDataDbDaoConfig, this);
        equipmentDbDao = new EquipmentDbDao(equipmentDbDaoConfig, this);
        imageDao = new ImageDao(imageDaoConfig, this);
        roomDbDao = new RoomDbDao(roomDbDaoConfig, this);
        shareDataDbDao = new ShareDataDbDao(shareDataDbDaoConfig, this);
        taskDbDao = new TaskDbDao(taskDbDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        voiceDao = new VoiceDao(voiceDaoConfig, this);
        newsBeanDao = new NewsBeanDao(newsBeanDaoConfig, this);
        readNewsBeanDao = new ReadNewsBeanDao(readNewsBeanDaoConfig, this);

        registerDao(CreateEquipmentDb.class, createEquipmentDbDao);
        registerDao(CreateRoomDb.class, createRoomDbDao);
        registerDao(EquipmentDataDb.class, equipmentDataDbDao);
        registerDao(EquipmentDb.class, equipmentDbDao);
        registerDao(Image.class, imageDao);
        registerDao(RoomDb.class, roomDbDao);
        registerDao(ShareDataDb.class, shareDataDbDao);
        registerDao(TaskDb.class, taskDbDao);
        registerDao(UserInfo.class, userInfoDao);
        registerDao(Voice.class, voiceDao);
        registerDao(NewsBean.class, newsBeanDao);
        registerDao(ReadNewsBean.class, readNewsBeanDao);
    }
    
    public void clear() {
        createEquipmentDbDaoConfig.clearIdentityScope();
        createRoomDbDaoConfig.clearIdentityScope();
        equipmentDataDbDaoConfig.clearIdentityScope();
        equipmentDbDaoConfig.clearIdentityScope();
        imageDaoConfig.clearIdentityScope();
        roomDbDaoConfig.clearIdentityScope();
        shareDataDbDaoConfig.clearIdentityScope();
        taskDbDaoConfig.clearIdentityScope();
        userInfoDaoConfig.clearIdentityScope();
        voiceDaoConfig.clearIdentityScope();
        newsBeanDaoConfig.clearIdentityScope();
        readNewsBeanDaoConfig.clearIdentityScope();
    }

    public CreateEquipmentDbDao getCreateEquipmentDbDao() {
        return createEquipmentDbDao;
    }

    public CreateRoomDbDao getCreateRoomDbDao() {
        return createRoomDbDao;
    }

    public EquipmentDataDbDao getEquipmentDataDbDao() {
        return equipmentDataDbDao;
    }

    public EquipmentDbDao getEquipmentDbDao() {
        return equipmentDbDao;
    }

    public ImageDao getImageDao() {
        return imageDao;
    }

    public RoomDbDao getRoomDbDao() {
        return roomDbDao;
    }

    public ShareDataDbDao getShareDataDbDao() {
        return shareDataDbDao;
    }

    public TaskDbDao getTaskDbDao() {
        return taskDbDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public VoiceDao getVoiceDao() {
        return voiceDao;
    }

    public NewsBeanDao getNewsBeanDao() {
        return newsBeanDao;
    }

    public ReadNewsBeanDao getReadNewsBeanDao() {
        return readNewsBeanDao;
    }

}
