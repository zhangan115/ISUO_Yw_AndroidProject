// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.isuo.yw2application.view.main.generate.repair;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class GenerateRepairActivity_MembersInjector
    implements MembersInjector<GenerateRepairActivity> {
  private final Provider<GenerateRepairPresenter> generateRepairPresenterProvider;

  public GenerateRepairActivity_MembersInjector(
      Provider<GenerateRepairPresenter> generateRepairPresenterProvider) {
    assert generateRepairPresenterProvider != null;
    this.generateRepairPresenterProvider = generateRepairPresenterProvider;
  }

  public static MembersInjector<GenerateRepairActivity> create(
      Provider<GenerateRepairPresenter> generateRepairPresenterProvider) {
    return new GenerateRepairActivity_MembersInjector(generateRepairPresenterProvider);
  }

  @Override
  public void injectMembers(GenerateRepairActivity instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.generateRepairPresenter = generateRepairPresenterProvider.get();
  }

  public static void injectGenerateRepairPresenter(
      GenerateRepairActivity instance,
      Provider<GenerateRepairPresenter> generateRepairPresenterProvider) {
    instance.generateRepairPresenter = generateRepairPresenterProvider.get();
  }
}
