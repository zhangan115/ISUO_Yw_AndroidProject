// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.isuo.yw2application.view.main.data;

import com.isuo.yw2application.mode.customer.CustomerRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class DataPresenter_Factory implements Factory<DataPresenter> {
  private final Provider<CustomerRepository> repositoryProvider;

  private final Provider<DataContract.View> viewProvider;

  public DataPresenter_Factory(
      Provider<CustomerRepository> repositoryProvider, Provider<DataContract.View> viewProvider) {
    assert repositoryProvider != null;
    this.repositoryProvider = repositoryProvider;
    assert viewProvider != null;
    this.viewProvider = viewProvider;
  }

  @Override
  public DataPresenter get() {
    return new DataPresenter(repositoryProvider.get(), viewProvider.get());
  }

  public static Factory<DataPresenter> create(
      Provider<CustomerRepository> repositoryProvider, Provider<DataContract.View> viewProvider) {
    return new DataPresenter_Factory(repositoryProvider, viewProvider);
  }
}
