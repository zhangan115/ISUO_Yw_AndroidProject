// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.isuo.yw2application.view.main.generate.increment;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class GenerateIncrementActivity_MembersInjector
    implements MembersInjector<GenerateIncrementActivity> {
  private final Provider<GenerateIncrementPresenter> generateIncrementPresenterProvider;

  public GenerateIncrementActivity_MembersInjector(
      Provider<GenerateIncrementPresenter> generateIncrementPresenterProvider) {
    assert generateIncrementPresenterProvider != null;
    this.generateIncrementPresenterProvider = generateIncrementPresenterProvider;
  }

  public static MembersInjector<GenerateIncrementActivity> create(
      Provider<GenerateIncrementPresenter> generateIncrementPresenterProvider) {
    return new GenerateIncrementActivity_MembersInjector(generateIncrementPresenterProvider);
  }

  @Override
  public void injectMembers(GenerateIncrementActivity instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.generateIncrementPresenter = generateIncrementPresenterProvider.get();
  }

  public static void injectGenerateIncrementPresenter(
      GenerateIncrementActivity instance,
      Provider<GenerateIncrementPresenter> generateIncrementPresenterProvider) {
    instance.generateIncrementPresenter = generateIncrementPresenterProvider.get();
  }
}
