// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.isuo.yw2application.view.main.feedback;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class QuestionActivity_MembersInjector implements MembersInjector<QuestionActivity> {
  private final Provider<QuestionPresenter> presenterProvider;

  public QuestionActivity_MembersInjector(Provider<QuestionPresenter> presenterProvider) {
    assert presenterProvider != null;
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<QuestionActivity> create(
      Provider<QuestionPresenter> presenterProvider) {
    return new QuestionActivity_MembersInjector(presenterProvider);
  }

  @Override
  public void injectMembers(QuestionActivity instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.presenter = presenterProvider.get();
  }

  public static void injectPresenter(
      QuestionActivity instance, Provider<QuestionPresenter> presenterProvider) {
    instance.presenter = presenterProvider.get();
  }
}
